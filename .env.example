#################################################################################################
#######################################  EXECUTION SETUP  #######################################
#################################################################################################

# NODE_ENV:                 development - execute the platform in development environment
#                           test - execute the platform in test environment
#                           production - execute the platform in production environment
#                           default value: development
NODE_ENV=development

#################################################################################################
###################################### ANALYTICS API SETUP ######################################
#################################################################################################

# PORT_HTTP:                Port used by listen for HTTP request.
#                           default value: 6000
PORT_HTTP=6000

# PORT_HTTPS:               Port used to listen for HTTPS request
#                           default value: 6001
PORT_HTTPS=6001

#################################################################################################
####################################### CERTIFICATES/KEYS #######################################
#################################################################################################

# SSL_KEY_PATH:             Private key for SSL certificate
#                           default value: ./.certs/server.key
#
#                           To generate self-signed certificates,
#                           use the ./create-self-signed-certs.sh script.
SSL_KEY_PATH=./.certs/server.key

# SSL_CERT_PATH:            Certificate SSL
#                           default value: ./.certs/server.crt
#
#                           To generate self-signed certificates,
#                           use the ./create-self-signed-certs.sh script.
SSL_CERT_PATH=./.certs/server.crt

#################################################################################################
######################################## DATABASES SETUP ########################################
#################################################################################################

# MONGODB_URI:              Database connection URI used by the service for connecting to
#                           a MongoDB instance if the application is running in development or
#                           production environment (NODE_ENV=development or NODE_ENV=production).
#                           default value: mongodb://localhost:27017/ehr-service
MONGODB_URI=mongodb://localhost:27017/ehr-service

# MONGODB_URI_TEST:         Database connection URI used by the service for connecting to
#                           a MongoDB instance if the application is running test environment
#                           (NODE_ENV=test).
#                           default value: mongodb://localhost:27017/ehr-service-test
MONGODB_URI_TEST=mongodb://localhost:27017/ehr-service-test

# MONGODB_ENABLE_TLS:       Enables/Disables connection to TLS
#                           When TLS is used for connection, client certificates
#                           are required (MONGODB_KEY_PATH, MONGODB_CA_PATH).
#
#                           default value: false
MONGODB_ENABLE_TLS=false

# MONGODB_KEY_PATH:         Client certificate and key in .pem format to connect to MongoDB
#                           default value: .certs/mongodb/client.pem
MONGODB_KEY_PATH=.certs/mongodb/client.pem

# MONGODB_CA_PATH:          MongoDB Certificate of the Authentication entity (CA)
#                           default value: .certs/mongodb/client.pem
MONGODB_CA_PATH=.certs/mongodb/ca.pem

#################################################################################################
##################################### MESSAGE CHANNEL SETUP #####################################
#################################################################################################

# RABBITMQ_URI:             URI for connection to RabbitMQ.
#                           When TLS is used for conection the protocol is amqps
#                           and client certificates are required (RABBITMQ_CERT_PATH,
#                           RABBITMQ_KEY_PATH, RABBITMQ_CA_PATH)
#
#                           format value: amqp://user:pass@host:port/vhost
#                           default value: amqp://guest:guest@localhost:5672
RABBITMQ_URI=amqp://guest:guest@localhost:5672

# RABBITMQ_CERT_PATH:       RabbitMQ Certificate
#                           default value: .certs/rabbitmq/cert.pem
RABBITMQ_CERT_PATH=.certs/rabbitmq/cert.pem

# RABBITMQ_KEY_PATH:        RabbitMQ Key
#                           default value: .certs/rabbitmq/key.pem
RABBITMQ_KEY_PATH=.certs/rabbitmq/key.pem

# RABBITMQ_CA_PATH:         RabbitMQ Certificate of the Authentication entity (CA)
#                           default value: .certs/rabbitmq/ca.pem
RABBITMQ_CA_PATH=.certs/rabbitmq/ca.pem

############################################################################################################
#################################### EXTERNAL SERVICES SETUP ###############################################
############################################################################################################

# AWS_ACCESS_KEY_ID
#                                   Access Key ID for AWS IAM user with permission to manage S3 service.
#                                   example value: AKIAIOSFODNN7EXAMPLE
AWS_ACCESS_KEY_ID=YOUR_ACCESS_KEY_ID

# AWS_SECRET_ACCESS_KEY
#                                   Access Secret Key for AWS IAM user with permission to manage S3 service.
#                                   dexample value: wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY
AWS_SECRET_ACCESS_KEY=YOUR_SECRET_ACCESS_KEY

# AWS_BUCKET_NAME
#                                   Name of the bucket created in S3 service to store files.
#                                   example value: haniot-bucket-01
AWS_BUCKET_NAME=YOUR_BUCKET_NAME

# AWS_BUCKET_REGION
#                                   Name of the region where the S3 bucket were instanced. For more info
#                                   about the regions of AWS, access the regions reference by the link:
#                                   https://docs.aws.amazon.com/general/latest/gr/rande.html
#                                   default value: us-west-2
AWS_BUCKET_REGION=us-west-2

#################################################################################################
##################################### DASHBOARD HOST SETUP ######################################
#################################################################################################

# DASHBOARD_HOST:           URI URI for the HANIoT platform dashboard host.
#                           default value: https://localhost
DASHBOARD_HOST=https://localhost
